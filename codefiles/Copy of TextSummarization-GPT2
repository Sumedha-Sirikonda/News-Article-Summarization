{"cells":[{"cell_type":"markdown","metadata":{"id":"X4cRE8IbIrIV"},"source":["If you're opening this Notebook on colab, you will probably need to install ðŸ¤— Transformers and ðŸ¤— Datasets as well as other dependencies. Uncomment the following cell and run it."]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2928,"status":"ok","timestamp":1637593028574,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"MOsHUjgdIrIW","outputId":"056dbd76-749f-4633-869a-fae9ffadf3b7"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: datasets in /usr/local/lib/python3.7/dist-packages (1.15.1)\n","Requirement already satisfied: transformers in /usr/local/lib/python3.7/dist-packages (4.12.5)\n","Requirement already satisfied: rouge-score in /usr/local/lib/python3.7/dist-packages (0.0.4)\n","Requirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (3.2.5)\n","Requirement already satisfied: dill in /usr/local/lib/python3.7/dist-packages (from datasets) (0.3.4)\n","Requirement already satisfied: tqdm\u003e=4.62.1 in /usr/local/lib/python3.7/dist-packages (from datasets) (4.62.3)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from datasets) (1.1.5)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from datasets) (4.8.2)\n","Requirement already satisfied: fsspec[http]\u003e=2021.05.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (2021.11.0)\n","Requirement already satisfied: requests\u003e=2.19.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (2.23.0)\n","Requirement already satisfied: xxhash in /usr/local/lib/python3.7/dist-packages (from datasets) (2.0.2)\n","Requirement already satisfied: multiprocess in /usr/local/lib/python3.7/dist-packages (from datasets) (0.70.12.2)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.7/dist-packages (from datasets) (3.8.1)\n","Requirement already satisfied: huggingface-hub\u003c1.0.0,\u003e=0.1.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (0.1.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from datasets) (21.3)\n","Requirement already satisfied: pyarrow!=4.0.0,\u003e=1.0.0 in /usr/local/lib/python3.7/dist-packages (from datasets) (3.0.0)\n","Requirement already satisfied: numpy\u003e=1.17 in /usr/local/lib/python3.7/dist-packages (from datasets) (1.19.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from huggingface-hub\u003c1.0.0,\u003e=0.1.0-\u003edatasets) (6.0)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4.3 in /usr/local/lib/python3.7/dist-packages (from huggingface-hub\u003c1.0.0,\u003e=0.1.0-\u003edatasets) (3.10.0.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from huggingface-hub\u003c1.0.0,\u003e=0.1.0-\u003edatasets) (3.4.0)\n","Requirement already satisfied: pyparsing!=3.0.5,\u003e=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging-\u003edatasets) (3.0.6)\n","Requirement already satisfied: idna\u003c3,\u003e=2.5 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.19.0-\u003edatasets) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,\u003c1.26,\u003e=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.19.0-\u003edatasets) (1.24.3)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.19.0-\u003edatasets) (2021.10.8)\n","Requirement already satisfied: chardet\u003c4,\u003e=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.19.0-\u003edatasets) (3.0.4)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2019.12.20)\n","Requirement already satisfied: sacremoses in /usr/local/lib/python3.7/dist-packages (from transformers) (0.0.46)\n","Requirement already satisfied: tokenizers\u003c0.11,\u003e=0.10.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (0.10.3)\n","Requirement already satisfied: six\u003e=1.14.0 in /usr/local/lib/python3.7/dist-packages (from rouge-score) (1.15.0)\n","Requirement already satisfied: absl-py in /usr/local/lib/python3.7/dist-packages (from rouge-score) (0.12.0)\n","Requirement already satisfied: frozenlist\u003e=1.1.1 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (1.2.0)\n","Requirement already satisfied: charset-normalizer\u003c3.0,\u003e=2.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (2.0.7)\n","Requirement already satisfied: yarl\u003c2.0,\u003e=1.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (1.7.2)\n","Requirement already satisfied: aiosignal\u003e=1.1.2 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (1.2.0)\n","Requirement already satisfied: async-timeout\u003c5.0,\u003e=4.0.0a3 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (4.0.1)\n","Requirement already satisfied: attrs\u003e=17.3.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (21.2.0)\n","Requirement already satisfied: asynctest==0.13.0 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (0.13.0)\n","Requirement already satisfied: multidict\u003c7.0,\u003e=4.5 in /usr/local/lib/python3.7/dist-packages (from aiohttp-\u003edatasets) (5.2.0)\n","Requirement already satisfied: zipp\u003e=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata-\u003edatasets) (3.6.0)\n","Requirement already satisfied: python-dateutil\u003e=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas-\u003edatasets) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas-\u003edatasets) (2018.9)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses-\u003etransformers) (7.1.2)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses-\u003etransformers) (1.1.0)\n"]}],"source":["! pip install datasets transformers rouge-score nltk"]},{"cell_type":"markdown","metadata":{"id":"7eQjeqJ210Zj"},"source":["If you're opening this notebook locally, make sure your environment has an install from the last version of those libraries.\n","\n","To be able to share your model with the community and generate results like the one shown in the picture below via the inference API, there are a few more steps to follow.\n","\n","First you have to store your authentication token from the Hugging Face website (sign up [here](https://huggingface.co/join) if you haven't already!) then execute the following cell and input your username and password:"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"elapsed":277,"status":"ok","timestamp":1637593036951,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"ookvjFCh10Zl","outputId":"83665a5a-faa8-4968-ea1c-2bbf5840628a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Login successful\n","Your token has been saved to /root/.huggingface/token\n","\u001b[1m\u001b[31mAuthenticated through git-crendential store but this isn't the helper defined on your machine.\n","You will have to re-authenticate when pushing to the Hugging Face Hub. Run the following command in your terminal to set it as the default\n","\n","git config --global credential.helper store\u001b[0m\n"]}],"source":["from huggingface_hub import notebook_login\n","\n","notebook_login()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":353,"status":"ok","timestamp":1637473241174,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"9sKXRlcMAiqx","outputId":"2e5edb66-696a-41fb-e793-3044e9d832ce"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content\n"]}],"source":["! pwd"]},{"cell_type":"markdown","metadata":{"id":"nPJ0T5mZ10Zm"},"source":["Then you need to install Git-LFS. Uncomment the following instructions:"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1746,"status":"ok","timestamp":1637593064774,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"ki5qarL710Zn","outputId":"b4feaf1f-8506-452f-a4f0-c1cb8a6ee2ee"},"outputs":[{"name":"stdout","output_type":"stream","text":["Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","git-lfs is already the newest version (2.3.4-1).\n","0 upgraded, 0 newly installed, 0 to remove and 37 not upgraded.\n"]}],"source":["!apt install git-lfs\n"]},{"cell_type":"markdown","metadata":{"id":"r_TW7wFr10Zp"},"source":["Make sure your version of Transformers is at least 4.11.0 since the functionality was introduced in that version:"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":291,"status":"ok","timestamp":1637593070859,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"9_h2nunq10Zq","outputId":"f14143ab-e0ae-4dc0-c270-19ec74958fc9"},"outputs":[{"name":"stdout","output_type":"stream","text":["4.12.5\n"]}],"source":["import transformers\n","\n","print(transformers.__version__)"]},{"cell_type":"markdown","metadata":{"id":"HFASsisvIrIb"},"source":["You can find a script version of this notebook to fine-tune your model in a distributed fashion using multiple GPUs or TPUs [here](https://github.com/huggingface/transformers/tree/master/examples/seq2seq)."]},{"cell_type":"markdown","metadata":{"id":"rEJBSTyZIrIb"},"source":["# Fine-tuning a model on a summarization task"]},{"cell_type":"markdown","metadata":{"id":"kTCFado4IrIc"},"source":["In this notebook, we will see how to fine-tune one of the [ðŸ¤— Transformers](https://github.com/huggingface/transformers) model for a summarization task. We will use the [XSum dataset](https://arxiv.org/pdf/1808.08745.pdf) (for extreme summarization) which contains BBC articles accompanied with single-sentence summaries.\n","\n","![Widget inference on a summarization task](https://github.com/huggingface/notebooks/blob/master/examples/images/summarization.png?raw=1)\n","\n","We will see how to easily load the dataset for this task using ðŸ¤— Datasets and how to fine-tune a model on it using the `Trainer` API."]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":303,"status":"ok","timestamp":1637593075710,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"gkGnPCdR10Zw"},"outputs":[],"source":["model_checkpoint = \"gpt2\""]},{"cell_type":"markdown","metadata":{"id":"4RRkXuteIrIh"},"source":["This notebook is built to run  with any model checkpoint from the [Model Hub](https://huggingface.co/models) as long as that model has a sequence-to-sequence version in the Transformers library. Here we picked the [`t5-small`](https://huggingface.co/t5-small) checkpoint. "]},{"cell_type":"markdown","metadata":{"id":"whPRbBNbIrIl"},"source":["## Loading the dataset"]},{"cell_type":"markdown","metadata":{"id":"W7QYTpxXIrIl"},"source":["We will use the [ðŸ¤— Datasets](https://github.com/huggingface/datasets) library to download the data and get the metric we need to use for evaluation (to compare our model to the benchmark). This can be easily done with the functions `load_dataset` and `load_metric`.  "]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":621,"status":"ok","timestamp":1637593078856,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"Drr9bnLQ2Yky","outputId":"235fb3bd-4c4b-4324-bba2-0bacb28d5f7d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import  drive\n","import os\n","\n","drive.mount('/content/gdrive', force_remount=True)\n","DATA_PATH = 'gdrive/Shared drives/Text_Summarization_Project/'\n","pickles_folder = os.listdir(DATA_PATH)\n"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":314,"status":"ok","timestamp":1637593092477,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"UnU71O5p2aKc"},"outputs":[],"source":["# Create a Pickle file dump\n","def pickle_dump(use_file_name,data_obj):\n","  local_path = os.path.join(DATA_PATH,use_file_name)\n","  filedump = open(local_path,'wb')\n","  pickle.dump(data_obj,filedump)\n","  filedump.close()\n","  print('Dump object created with filename : ',DATA_PATH+use_file_name)\n","\n","# Create a Pickle file Load\n","def pickle_load(use_file_name):\n","  local_path = os.path.join(DATA_PATH,use_file_name)\n","  fileload = open(local_path,'rb')\n","  data2 = pickle.load(fileload)\n","  fileload.close()\n","  return data2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7hbpP5ZZFdXz"},"outputs":[],"source":["import pickle,os\n","data_file = pickle_load('data_processed_for_gpt2.pickle')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JED7N8WCFiQ3"},"outputs":[],"source":["\n","dataset = data_file[['text','summary']]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PEM0zcRtHjXo"},"outputs":[],"source":["result = dataset.to_json(orient=\"table\")\n","raw_datasets = json.loads(result)\n","# json.dumps(parsed, indent=4) \n","raw_datasets"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":172},"executionInfo":{"elapsed":172,"status":"error","timestamp":1637476257092,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"h7y-rKHIL9s5","outputId":"7b2152cf-539d-45d5-cb65-435299d8b938"},"outputs":[{"ename":"TypeError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-41-f751cd1db964\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[0;32m----\u003e 1\u001b[0;31m \u001b[0mraw_datasets\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: unhashable type: 'slice'"]}],"source":["raw_datasets[:2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fCMijVYF2aML"},"outputs":[],"source":["# !tar -xvf /content/gdrive/Shareddrives/Text_Summarization_Project/newsroom.tar"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j4325e-V4HPp"},"outputs":[],"source":["# !mv  /content/newsroom-thin /content/gdrive/Shareddrives/Text_Summarization_Project/newsroom_thin_set"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A9wZZ-1B33wX"},"outputs":[],"source":["# !gunzip newsroom-thin/train.jsonl.gz\n"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5033,"status":"ok","timestamp":1637593106002,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"eqBJ8MMB7utz","outputId":"3932afd2-6d04-412a-8762-d67101c5f912"},"outputs":[{"name":"stdout","output_type":"stream","text":["Obtaining newsroom from git+git://github.com/clic-lab/newsroom.git#egg=newsroom\n","  Updating ./src/newsroom clone\n","  Running command git fetch -q --tags\n","  Running command git reset --hard -q 4551c77eaecf785a797b86292978fb05b719eb89\n","Requirement already satisfied: beautifulsoup4\u003e=4.6.0 in /usr/local/lib/python3.7/dist-packages (from newsroom) (4.6.3)\n","Requirement already satisfied: click\u003e=6.7 in /usr/local/lib/python3.7/dist-packages (from newsroom) (7.1.2)\n","Requirement already satisfied: nltk\u003e=3.2 in /usr/local/lib/python3.7/dist-packages (from newsroom) (3.2.5)\n","Requirement already satisfied: numpy\u003e=1.13.3 in /usr/local/lib/python3.7/dist-packages (from newsroom) (1.19.5)\n","Requirement already satisfied: pandas\u003e=0.23 in /usr/local/lib/python3.7/dist-packages (from newsroom) (1.1.5)\n","Requirement already satisfied: pyrouge\u003e=0.1.3 in /usr/local/lib/python3.7/dist-packages (from newsroom) (0.1.3)\n","Requirement already satisfied: readability-lxml\u003e=0.6.2 in /usr/local/lib/python3.7/dist-packages (from newsroom) (0.8.1)\n","Requirement already satisfied: requests\u003e=2.18.4 in /usr/local/lib/python3.7/dist-packages (from newsroom) (2.23.0)\n","Requirement already satisfied: spacy\u003e=2.0.4 in /usr/local/lib/python3.7/dist-packages (from newsroom) (2.2.4)\n","Requirement already satisfied: tqdm\u003e=4.15.0 in /usr/local/lib/python3.7/dist-packages (from newsroom) (4.62.3)\n","Requirement already satisfied: ujson\u003e=1.35 in /usr/local/lib/python3.7/dist-packages (from newsroom) (4.3.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk\u003e=3.2-\u003enewsroom) (1.15.0)\n","Requirement already satisfied: pytz\u003e=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas\u003e=0.23-\u003enewsroom) (2018.9)\n","Requirement already satisfied: python-dateutil\u003e=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas\u003e=0.23-\u003enewsroom) (2.8.2)\n","Requirement already satisfied: chardet in /usr/local/lib/python3.7/dist-packages (from readability-lxml\u003e=0.6.2-\u003enewsroom) (3.0.4)\n","Requirement already satisfied: cssselect in /usr/local/lib/python3.7/dist-packages (from readability-lxml\u003e=0.6.2-\u003enewsroom) (1.1.0)\n","Requirement already satisfied: lxml in /usr/local/lib/python3.7/dist-packages (from readability-lxml\u003e=0.6.2-\u003enewsroom) (4.2.6)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.18.4-\u003enewsroom) (2021.10.8)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,\u003c1.26,\u003e=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.18.4-\u003enewsroom) (1.24.3)\n","Requirement already satisfied: idna\u003c3,\u003e=2.5 in /usr/local/lib/python3.7/dist-packages (from requests\u003e=2.18.4-\u003enewsroom) (2.10)\n","Requirement already satisfied: cymem\u003c2.1.0,\u003e=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (2.0.6)\n","Requirement already satisfied: preshed\u003c3.1.0,\u003e=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (3.0.6)\n","Requirement already satisfied: plac\u003c1.2.0,\u003e=0.9.6 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (1.1.3)\n","Requirement already satisfied: blis\u003c0.5.0,\u003e=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (0.4.1)\n","Requirement already satisfied: murmurhash\u003c1.1.0,\u003e=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (1.0.6)\n","Requirement already satisfied: wasabi\u003c1.1.0,\u003e=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (0.8.2)\n","Requirement already satisfied: catalogue\u003c1.1.0,\u003e=0.0.7 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (1.0.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (57.4.0)\n","Requirement already satisfied: srsly\u003c1.1.0,\u003e=1.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (1.0.5)\n","Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy\u003e=2.0.4-\u003enewsroom) (7.4.0)\n","Requirement already satisfied: importlib-metadata\u003e=0.20 in /usr/local/lib/python3.7/dist-packages (from catalogue\u003c1.1.0,\u003e=0.0.7-\u003espacy\u003e=2.0.4-\u003enewsroom) (4.8.2)\n","Requirement already satisfied: zipp\u003e=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata\u003e=0.20-\u003ecatalogue\u003c1.1.0,\u003e=0.0.7-\u003espacy\u003e=2.0.4-\u003enewsroom) (3.6.0)\n","Requirement already satisfied: typing-extensions\u003e=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata\u003e=0.20-\u003ecatalogue\u003c1.1.0,\u003e=0.0.7-\u003espacy\u003e=2.0.4-\u003enewsroom) (3.10.0.2)\n","Installing collected packages: newsroom\n","  Attempting uninstall: newsroom\n","    Found existing installation: newsroom 0.1\n","    Can't uninstall 'newsroom'. No files were found to uninstall.\n","  Running setup.py develop for newsroom\n","Successfully installed newsroom-0.1\n"]}],"source":["!pip install -e git+git://github.com/clic-lab/newsroom.git#egg=newsroom"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"W92y98G07u3b"},"outputs":[{"name":"stdout","output_type":"stream","text":["108837 new summaries (about 2.2 GB).\n","If pages fail to download now, re-run script when finished.\n","\n","Downloading Summaries:  26% 28680/108837 [1:58:55\u003c5:09:44,  4.31it/s]\n","10 pages need re-downloading later.\n","Downloading Summaries:  35% 38529/108837 [2:39:10\u003c5:03:06,  3.87it/s]"]}],"source":["!newsroom-scrape --thin /content/gdrive/Shareddrives/Text_Summarization_Project/newsroom_thin_set/dev.jsonl.gz --archive dev.archive"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3815,"status":"ok","timestamp":1637556630948,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"PKijFWoG7u5G","outputId":"67720aa0-c7a1-47c5-eb36-e35c4b534ebe"},"outputs":[{"name":"stdout","output_type":"stream","text":["newsroom-thin/\n","newsroom-thin/dev.jsonl.gz\n","newsroom-thin/test.jsonl.gz\n","newsroom-thin/train.jsonl.gz\n","newsroom-thin/LICENSE\n"]}],"source":["!tar xvf /content/gdrive/Shareddrives/Text_Summarization_Project/newsroom.tar"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TP7FVw4sJfLk"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1608,"status":"ok","timestamp":1637555482101,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"gezqxRGo5Pdo","outputId":"a2123212-f337-45db-c96c-d299c952850c"},"outputs":[{"data":{"text/plain":["{'author': None,\n"," 'citation': '@inproceedings{N18-1065,\\n  author    = {Grusky, Max and Naaman, Mor and Artzi, Yoav},\\n  title     = {NEWSROOM: A Dataset of 1.3 Million Summaries\\n               with Diverse Extractive Strategies},\\n  booktitle = {Proceedings of the 2018 Conference of the\\n               North American Chapter of the Association for\\n               Computational Linguistics: Human Language Technologies},\\n  year      = {2018},\\n}',\n"," 'description': 'NEWSROOM is a large dataset for training and evaluating summarization systems.\\nIt contains 1.3 million articles and summaries written by authors and\\neditors in the newsrooms of 38 major publications.\\n\\nDataset features includes:\\n  - text: Input news text.\\n  - summary: Summary for the news.\\nAnd additional features:\\n  - title: news title.\\n  - url: url of the news.\\n  - date: date of the article.\\n  - density: extractive density.\\n  - coverage: extractive coverage.\\n  - compression: compression ratio.\\n  - density_bin: low, medium, high.\\n  - coverage_bin: extractive, abstractive.\\n  - compression_bin: low, medium, high.\\n\\nThis dataset can be downloaded upon requests. Unzip all the contents\\n\"train.jsonl, dev.josnl, test.jsonl\" to the tfds folder.',\n"," 'downloads': 274,\n"," 'etag': None,\n"," 'id': 'newsroom',\n"," 'key': '',\n"," 'lastModified': None,\n"," 'paperswithcode_id': 'newsroom',\n"," 'private': False,\n"," 'siblings': None,\n"," 'size': None,\n"," 'tags': ['languages:en']}"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["from datasets import load_dataset, load_metric,list_datasets\n","datasets = list_datasets()\n","newsroom_dataset = list_datasets(with_details=True)[datasets.index('newsroom')]\n","\n","# pprint(newsroom_dataset.__dict__)\n","newsroom_dataset.__dict__\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":474},"executionInfo":{"elapsed":1120,"status":"error","timestamp":1637554778307,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"IreSlFmlIrIm","outputId":"3b1df06b-b749-4b77-dbc9-4bc56f4e7eba"},"outputs":[{"name":"stderr","output_type":"stream","text":["Using custom data configuration default-d1091b5a70dce290\n"]},{"name":"stdout","output_type":"stream","text":["Downloading and preparing dataset newsroom/default (download: Unknown size, generated: 4.94 GiB, post-processed: Unknown size, total: 4.94 GiB) to /root/.cache/huggingface/datasets/newsroom/default-d1091b5a70dce290/1.0.0/aa75673f56c487547fca8f0001fa227163b9623316a1658fa8738b16b94e6c31...\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6dd7844209c34ac49a69457daf8f0d6a","version_major":2,"version_minor":0},"text/plain":["0 examples [00:00, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"ename":"KeyError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-9-da491eeb3e44\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mdatasets\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mload_dataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mload_metric\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 3\u001b[0;31m \u001b[0mraw_datasets\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_dataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"newsroom\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdata_dir\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'/content/gdrive/Shareddrives/Text_Summarization_Project/newsroom/'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0muse_auth_token\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'train'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;31m# raw_datasets = load_dataset(\"newsroom\")\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmetric\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mload_metric\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"rouge\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/datasets/load.py\u001b[0m in \u001b[0;36mload_dataset\u001b[0;34m(path, name, data_dir, data_files, split, cache_dir, features, download_config, download_mode, ignore_verifications, keep_in_memory, save_infos, revision, use_auth_token, task, streaming, script_version, **config_kwargs)\u001b[0m\n\u001b[1;32m   1635\u001b[0m         \u001b[0mignore_verifications\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mignore_verifications\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1636\u001b[0m         \u001b[0mtry_from_hf_gcs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtry_from_hf_gcs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1637\u001b[0;31m         \u001b[0muse_auth_token\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0muse_auth_token\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1638\u001b[0m     )\n\u001b[1;32m   1639\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/datasets/builder.py\u001b[0m in \u001b[0;36mdownload_and_prepare\u001b[0;34m(self, download_config, download_mode, ignore_verifications, try_from_hf_gcs, dl_manager, base_path, use_auth_token, **download_and_prepare_kwargs)\u001b[0m\n\u001b[1;32m    606\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mdownloaded_from_gcs\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m                         self._download_and_prepare(\n\u001b[0;32m--\u003e 608\u001b[0;31m                             \u001b[0mdl_manager\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdl_manager\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverify_infos\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mverify_infos\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mdownload_and_prepare_kwargs\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    609\u001b[0m                         )\n\u001b[1;32m    610\u001b[0m                     \u001b[0;31m# Sync info\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/datasets/builder.py\u001b[0m in \u001b[0;36m_download_and_prepare\u001b[0;34m(self, dl_manager, verify_infos, **prepare_split_kwargs)\u001b[0m\n\u001b[1;32m    695\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    696\u001b[0m                 \u001b[0;31m# Prepare split will record examples associated to the split\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 697\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_prepare_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msplit_generator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mprepare_split_kwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    698\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mOSError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    699\u001b[0m                 raise OSError(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/datasets/builder.py\u001b[0m in \u001b[0;36m_prepare_split\u001b[0;34m(self, split_generator)\u001b[0m\n\u001b[1;32m   1099\u001b[0m                     \u001b[0mtotal\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msplit_info\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnum_examples\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1100\u001b[0m                     \u001b[0mleave\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1101\u001b[0;31m                     \u001b[0mdisable\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbool\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlogging\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_verbosity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mlogging\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mNOTSET\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1102\u001b[0m                 ):\n\u001b[1;32m   1103\u001b[0m                     \u001b[0mexample\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencode_example\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tqdm/notebook.py\u001b[0m in \u001b[0;36m__iter__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    255\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__iter__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    256\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 257\u001b[0;31m             \u001b[0;32mfor\u001b[0m \u001b[0mobj\u001b[0m \u001b[0;32min\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtqdm_notebook\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__iter__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    258\u001b[0m                 \u001b[0;31m# return super(tqdm...) will not catch exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    259\u001b[0m                 \u001b[0;32myield\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tqdm/std.py\u001b[0m in \u001b[0;36m__iter__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1178\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1179\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1180\u001b[0;31m             \u001b[0;32mfor\u001b[0m \u001b[0mobj\u001b[0m \u001b[0;32min\u001b[0m \u001b[0miterable\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1181\u001b[0m                 \u001b[0;32myield\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1182\u001b[0m                 \u001b[0;31m# Update and possibly print the progressbar.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/root/.cache/huggingface/modules/datasets_modules/datasets/newsroom/aa75673f56c487547fca8f0001fa227163b9623316a1658fa8738b16b94e6c31/newsroom.py\u001b[0m in \u001b[0;36m_generate_examples\u001b[0;34m(self, input_file)\u001b[0m\n\u001b[1;32m    140\u001b[0m                 \u001b[0;31m#  \"compression', \"coverage\", \"coverage_bin\",\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m                 yield i, {\n\u001b[0;32m--\u003e 142\u001b[0;31m                     \u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0md\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0m_DOCUMENT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_SUMMARY\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0m_ADDITIONAL_TEXT_FEATURES\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0m_ADDITIONAL_FLOAT_FEATURES\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    143\u001b[0m                 }\n","\u001b[0;32m/root/.cache/huggingface/modules/datasets_modules/datasets/newsroom/aa75673f56c487547fca8f0001fa227163b9623316a1658fa8738b16b94e6c31/newsroom.py\u001b[0m in \u001b[0;36m\u003cdictcomp\u003e\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    140\u001b[0m                 \u001b[0;31m#  \"compression', \"coverage\", \"coverage_bin\",\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m                 yield i, {\n\u001b[0;32m--\u003e 142\u001b[0;31m                     \u001b[0mk\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0md\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0m_DOCUMENT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_SUMMARY\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0m_ADDITIONAL_TEXT_FEATURES\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0m_ADDITIONAL_FLOAT_FEATURES\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    143\u001b[0m                 }\n","\u001b[0;31mKeyError\u001b[0m: 'text'"]}],"source":["from datasets import load_dataset, load_metric\n","\n","raw_datasets = load_dataset(\"newsroom\",data_dir='/content/gdrive/Shareddrives/Text_Summarization_Project/newsroom/',use_auth_token=True,split='train')\n","# raw_datasets = load_dataset(\"newsroom\")\n","metric = load_metric(\"rouge\")"]},{"cell_type":"markdown","metadata":{"id":"RzfPtOMoIrIu"},"source":["The `dataset` object itself is [`DatasetDict`](https://huggingface.co/docs/datasets/package_reference/main_classes.html#datasetdict), which contains one key for the training, validation and test set:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GWiVUF0jIrIv","outputId":"35e3ea43-f397-4a54-c90c-f2cf8d36873e"},"outputs":[{"data":{"text/plain":["DatasetDict({\n","    train: Dataset({\n","        features: ['document', 'summary', 'id'],\n","        num_rows: 204045\n","    })\n","    validation: Dataset({\n","        features: ['document', 'summary', 'id'],\n","        num_rows: 11332\n","    })\n","    test: Dataset({\n","        features: ['document', 'summary', 'id'],\n","        num_rows: 11334\n","    })\n","})"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["raw_datasets"]},{"cell_type":"markdown","metadata":{"id":"u3EtYfeHIrIz"},"source":["To access an actual element, you need to select a split first, then give an index:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X6HrpprwIrIz","outputId":"d7670bc0-42e4-4c09-8a6a-5c018ded7d95"},"outputs":[{"data":{"text/plain":["{'document': 'Recent reports have linked some France-based players with returns to Wales.\\n\"I\\'ve always felt - and this is with my rugby hat on now; this is not region or WRU - I\\'d rather spend that money on keeping players in Wales,\" said Davies.\\nThe WRU provides Â£2m to the fund and Â£1.3m comes from the regions.\\nFormer Wales and British and Irish Lions fly-half Davies became WRU chairman on Tuesday 21 October, succeeding deposed David Pickering following governing body elections.\\nHe is now serving a notice period to leave his role as Newport Gwent Dragons chief executive after being voted on to the WRU board in September.\\nDavies was among the leading figures among Dragons, Ospreys, Scarlets and Cardiff Blues officials who were embroiled in a protracted dispute with the WRU that ended in a Â£60m deal in August this year.\\nIn the wake of that deal being done, Davies said the Â£3.3m should be spent on ensuring current Wales-based stars remain there.\\nIn recent weeks, Racing Metro flanker Dan Lydiate was linked with returning to Wales.\\nLikewise the Paris club\\'s scrum-half Mike Phillips and centre Jamie Roberts were also touted for possible returns.\\nWales coach Warren Gatland has said: \"We haven\\'t instigated contact with the players.\\n\"But we are aware that one or two of them are keen to return to Wales sooner rather than later.\"\\nSpeaking to Scrum V on BBC Radio Wales, Davies re-iterated his stance, saying keeping players such as Scarlets full-back Liam Williams and Ospreys flanker Justin Tipuric in Wales should take precedence.\\n\"It\\'s obviously a limited amount of money [available]. The union are contributing 60% of that contract and the regions are putting Â£1.3m in.\\n\"So it\\'s a total pot of just over Â£3m and if you look at the sorts of salaries that the... guys... have been tempted to go overseas for [are] significant amounts of money.\\n\"So if we were to bring the players back, we\\'d probably get five or six players.\\n\"And I\\'ve always felt - and this is with my rugby hat on now; this is not region or WRU - I\\'d rather spend that money on keeping players in Wales.\\n\"There are players coming out of contract, perhaps in the next year or soâ€¦ you\\'re looking at your Liam Williams\\' of the world; Justin Tipuric for example - we need to keep these guys in Wales.\\n\"We actually want them there. They are the ones who are going to impress the young kids, for example.\\n\"They are the sort of heroes that our young kids want to emulate.\\n\"So I would start off [by saying] with the limited pot of money, we have to retain players in Wales.\\n\"Now, if that can be done and there\\'s some spare monies available at the end, yes, let\\'s look to bring players back.\\n\"But it\\'s a cruel world, isn\\'t it?\\n\"It\\'s fine to take the buck and go, but great if you can get them back as well, provided there\\'s enough money.\"\\nBritish and Irish Lions centre Roberts has insisted he will see out his Racing Metro contract.\\nHe and Phillips also earlier dismissed the idea of leaving Paris.\\nRoberts also admitted being hurt by comments in French Newspaper L\\'Equipe attributed to Racing Coach Laurent Labit questioning their effectiveness.\\nCentre Roberts and flanker Lydiate joined Racing ahead of the 2013-14 season while scrum-half Phillips moved there in December 2013 after being dismissed for disciplinary reasons by former club Bayonne.',\n"," 'id': '29750031',\n"," 'summary': 'New Welsh Rugby Union chairman Gareth Davies believes a joint Â£3.3m WRU-regions fund should be used to retain home-based talent such as Liam Williams, not bring back exiled stars.'}"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["raw_datasets[\"train\"][0]"]},{"cell_type":"markdown","metadata":{"id":"WHUmphG3IrI3"},"source":["To get a sense of what the data looks like, the following function will show some examples picked randomly in the dataset."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-5EbVK0yOsdR"},"outputs":[],"source":["import torch\n","from torch.utils.data import Dataset,DataLoader\n","class CustomTextDataset(Dataset):\n","\n","  def __init__(self, text, labels):\n","      self.labels = labels\n","      self.text = text\n","  def __len__(self):\n","          return len(self.labels)\n","  def __getitem__(self, idx):\n","          label = self.labels[idx]\n","          text = self.text[idx]\n","          sample = {\"Text\": text, \"Summary\": label}\n","          return sample\n","\n","raw_datasets = CustomTextDataset(dataset['text'],dataset['summary'])\n","# DL_DS = DataLoader(raw_datasets, shuffle=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":218,"status":"ok","timestamp":1637477938065,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"1MlFdz16PewD","outputId":"43e6abc5-67d9-4493-fcca-09bd46bc74cf"},"outputs":[{"data":{"text/plain":["{'Summary': 0    former new england patriot star face murder ch...\n"," 1    bonn economic summit meeting western leader we...\n"," Name: summary, dtype: object,\n"," 'Text': 0    edt aaron hernandez coming close attorney form...\n"," 1    bonn economic summit meeting western leader we...\n"," Name: text, dtype: object}"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["raw_datasets[:2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i3j8APAoIrI3"},"outputs":[],"source":["import datasets\n","import random\n","import pandas as pd\n","from IPython.display import display, HTML\n","\n","def show_random_elements(dataset, num_examples=5):\n","    assert num_examples \u003c= len(dataset), \"Can't pick more elements than there are in the dataset.\"\n","    picks = []\n","    for _ in range(num_examples):\n","        pick = random.randint(0, len(dataset)-1)\n","        while pick in picks:\n","            pick = random.randint(0, len(dataset)-1)\n","        picks.append(pick)\n","    \n","    df = pd.DataFrame(dataset[picks])\n","    for column, typ in dataset.features.items():\n","        if isinstance(typ, datasets.ClassLabel):\n","            df[column] = df[column].transform(lambda i: typ.names[i])\n","    display(HTML(df.to_html()))\n","    "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9Ytu6niCPd1e"},"outputs":[],"source":[""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":325},"executionInfo":{"elapsed":129,"status":"error","timestamp":1637477338898,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"SZy5tRB_IrI7","outputId":"e59325d8-c5c7-4b91-f0d1-b1d946ee5395"},"outputs":[{"ename":"AttributeError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-70-f24b06c9a32b\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[0;32m----\u003e 1\u001b[0;31m \u001b[0mshow_random_elements\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mraw_datasets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m\u003cipython-input-69-f8bdfb9425fc\u003e\u001b[0m in \u001b[0;36mshow_random_elements\u001b[0;34m(dataset, num_examples)\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpicks\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 16\u001b[0;31m     \u001b[0;32mfor\u001b[0m \u001b[0mcolumn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtyp\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtyp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdatasets\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mClassLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m             \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolumn\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolumn\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtyp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnames\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataset.py\u001b[0m in \u001b[0;36m__getattr__\u001b[0;34m(self, attribute_name)\u001b[0m\n\u001b[1;32m     81\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunction\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     82\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 83\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     84\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     85\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mclassmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: "]}],"source":["show_random_elements(raw_datasets)"]},{"cell_type":"markdown","metadata":{"id":"lnjDIuQ3IrI-"},"source":["The metric is an instance of [`datasets.Metric`](https://huggingface.co/docs/datasets/package_reference/main_classes.html#datasets.Metric):"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":141,"status":"ok","timestamp":1637477945328,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"5o4rUteaIrI_","outputId":"f24c796d-e5b8-4832-ee15-a0067fce4d49"},"outputs":[{"data":{"text/plain":["Metric(name: \"rouge\", features: {'predictions': Value(dtype='string', id='sequence'), 'references': Value(dtype='string', id='sequence')}, usage: \"\"\"\n","Calculates average rouge scores for a list of hypotheses and references\n","Args:\n","    predictions: list of predictions to score. Each predictions\n","        should be a string with tokens separated by spaces.\n","    references: list of reference for each prediction. Each\n","        reference should be a string with tokens separated by spaces.\n","    rouge_types: A list of rouge types to calculate.\n","        Valid names:\n","        `\"rouge{n}\"` (e.g. `\"rouge1\"`, `\"rouge2\"`) where: {n} is the n-gram based scoring,\n","        `\"rougeL\"`: Longest common subsequence based scoring.\n","        `\"rougeLSum\"`: rougeLsum splits text using `\"\n","\"`.\n","        See details in https://github.com/huggingface/datasets/issues/617\n","    use_stemmer: Bool indicating whether Porter stemmer should be used to strip word suffixes.\n","    use_agregator: Return aggregates if this is set to True\n","Returns:\n","    rouge1: rouge_1 (precision, recall, f1),\n","    rouge2: rouge_2 (precision, recall, f1),\n","    rougeL: rouge_l (precision, recall, f1),\n","    rougeLsum: rouge_lsum (precision, recall, f1)\n","Examples:\n","\n","    \u003e\u003e\u003e rouge = datasets.load_metric('rouge')\n","    \u003e\u003e\u003e predictions = [\"hello there\", \"general kenobi\"]\n","    \u003e\u003e\u003e references = [\"hello there\", \"general kenobi\"]\n","    \u003e\u003e\u003e results = rouge.compute(predictions=predictions, references=references)\n","    \u003e\u003e\u003e print(list(results.keys()))\n","    ['rouge1', 'rouge2', 'rougeL', 'rougeLsum']\n","    \u003e\u003e\u003e print(results[\"rouge1\"])\n","    AggregateScore(low=Score(precision=1.0, recall=1.0, fmeasure=1.0), mid=Score(precision=1.0, recall=1.0, fmeasure=1.0), high=Score(precision=1.0, recall=1.0, fmeasure=1.0))\n","    \u003e\u003e\u003e print(results[\"rouge1\"].mid.fmeasure)\n","    1.0\n","\"\"\", stored examples: 0)"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["metric"]},{"cell_type":"markdown","metadata":{"id":"jAWdqcUBIrJC"},"source":["You can call its `compute` method with your predictions and labels, which need to be list of decoded strings:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":377,"status":"ok","timestamp":1637477948790,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"6XN1Rq0aIrJC","outputId":"ad0ef3fa-327b-4093-a46c-f315b8228b80"},"outputs":[{"data":{"text/plain":["{'rouge1': AggregateScore(low=Score(precision=1.0, recall=1.0, fmeasure=1.0), mid=Score(precision=1.0, recall=1.0, fmeasure=1.0), high=Score(precision=1.0, recall=1.0, fmeasure=1.0)),\n"," 'rouge2': AggregateScore(low=Score(precision=1.0, recall=1.0, fmeasure=1.0), mid=Score(precision=1.0, recall=1.0, fmeasure=1.0), high=Score(precision=1.0, recall=1.0, fmeasure=1.0)),\n"," 'rougeL': AggregateScore(low=Score(precision=1.0, recall=1.0, fmeasure=1.0), mid=Score(precision=1.0, recall=1.0, fmeasure=1.0), high=Score(precision=1.0, recall=1.0, fmeasure=1.0)),\n"," 'rougeLsum': AggregateScore(low=Score(precision=1.0, recall=1.0, fmeasure=1.0), mid=Score(precision=1.0, recall=1.0, fmeasure=1.0), high=Score(precision=1.0, recall=1.0, fmeasure=1.0))}"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["fake_preds = [\"hello there\", \"general kenobi\"]\n","fake_labels = [\"hello there\", \"general kenobi\"]\n","metric.compute(predictions=fake_preds, references=fake_labels)"]},{"cell_type":"markdown","metadata":{"id":"n9qywopnIrJH"},"source":["## Preprocessing the data"]},{"cell_type":"markdown","metadata":{"id":"YVx71GdAIrJH"},"source":["Before we can feed those texts to our model, we need to preprocess them. This is done by a ðŸ¤— Transformers `Tokenizer` which will (as the name indicates) tokenize the inputs (including converting the tokens to their corresponding IDs in the pretrained vocabulary) and put it in a format the model expects, as well as generate the other inputs that the model requires.\n","\n","To do all of this, we instantiate our tokenizer with the `AutoTokenizer.from_pretrained` method, which will ensure:\n","\n","- we get a tokenizer that corresponds to the model architecture we want to use,\n","- we download the vocabulary used when pretraining this specific checkpoint.\n","\n","That vocabulary will be cached, so it's not downloaded again the next time we run the cell."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"elapsed":7113,"status":"ok","timestamp":1637477959642,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"eXNLu_-nIrJI","outputId":"0efddbc1-3470-404a-818f-3b2ab86097c7"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"61ab05bff0c74d26be97424386da21b4","version_major":2,"version_minor":0},"text/plain":["Downloading:   0%|          | 0.00/665 [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5b54cbfafe8c4953a58c39f033533b46","version_major":2,"version_minor":0},"text/plain":["Downloading:   0%|          | 0.00/0.99M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"577a999b6c6b434fa3cd0eac0b13d65a","version_major":2,"version_minor":0},"text/plain":["Downloading:   0%|          | 0.00/446k [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"031186bbea44460ab4134177225b9212","version_major":2,"version_minor":0},"text/plain":["Downloading:   0%|          | 0.00/1.29M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"}],"source":["from transformers import AutoTokenizer\n","    \n","tokenizer = AutoTokenizer.from_pretrained(model_checkpoint)"]},{"cell_type":"markdown","metadata":{"id":"Vl6IidfdIrJK"},"source":["By default, the call above will use one of the fast tokenizers (backed by Rust) from the ðŸ¤— Tokenizers library."]},{"cell_type":"markdown","metadata":{"id":"rowT4iCLIrJK"},"source":["You can directly call this tokenizer on one sentence or a pair of sentences:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":148,"status":"ok","timestamp":1637474942587,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"a5hBlsrHIrJL","outputId":"ca14b737-50b6-4dfe-8b09-c404feb30a57"},"outputs":[{"data":{"text/plain":["{'input_ids': [15496, 11, 428, 530, 6827, 0], 'attention_mask': [1, 1, 1, 1, 1, 1]}"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["tokenizer(\"Hello, this one sentence!\")"]},{"cell_type":"markdown","metadata":{"id":"qo_0B1M2IrJM"},"source":["Depending on the model you selected, you will see different keys in the dictionary returned by the cell above. They don't matter much for what we're doing here (just know they are required by the model we will instantiate later), you can learn more about them in [this tutorial](https://huggingface.co/transformers/preprocessing.html) if you're interested.\n","\n","Instead of one sentence, we can pass along a list of sentences:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":128,"status":"ok","timestamp":1637474947542,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"5n7KGlEa10aC","outputId":"187c9973-7951-49d0-e750-47fc02211d81"},"outputs":[{"data":{"text/plain":["{'input_ids': [[15496, 11, 428, 530, 6827, 0], [1212, 318, 1194, 6827, 13]], 'attention_mask': [[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1]]}"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["tokenizer([\"Hello, this one sentence!\", \"This is another sentence.\"])"]},{"cell_type":"markdown","metadata":{"id":"6YA_WEHc10aD"},"source":["To prepare the targets for our model, we need to tokenize them inside the `as_target_tokenizer` context manager. This will make sure the tokenizer uses the special tokens corresponding to the targets:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":143,"status":"ok","timestamp":1637474952792,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"sg1k-f2i10aD","outputId":"97efd034-d865-4a81-efe5-c22d3adf0043"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'input_ids': [[15496, 11, 428, 530, 6827, 0], [1212, 318, 1194, 6827, 13]], 'attention_mask': [[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1]]}\n"]}],"source":["with tokenizer.as_target_tokenizer():\n","    print(tokenizer([\"Hello, this one sentence!\", \"This is another sentence.\"]))"]},{"cell_type":"markdown","metadata":{"id":"2C0hcmp9IrJQ"},"source":["If you are using one of the five T5 checkpoints we have to prefix the inputs with \"summarize:\" (the model can also translate and it needs the prefix to know which task it has to perform)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CyPvX8N010aE"},"outputs":[],"source":["if model_checkpoint in [\"gpt2\",'gpt2-medium',\"gpt2-large\",\"gpt2-xl\"]:\n","    prefix = \"summarize: \"\n","else:\n","    prefix = \"\""]},{"cell_type":"markdown","metadata":{"id":"kTLv8kZ510aF"},"source":["We can then write the function that will preprocess our samples. We just feed them to the `tokenizer` with the argument `truncation=True`. This will ensure that an input longer that what the model selected can handle will be truncated to the maximum length accepted by the model. The padding will be dealt with later on (in a data collator) so we pad examples to the longest length in the batch and not the whole dataset."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vc0BSBLIIrJQ"},"outputs":[],"source":["max_input_length = 1024\n","max_target_length = 128\n","\n","def preprocess_function(examples):\n","    inputs = [prefix + doc[1:] for doc in examples[\"Text\"]]\n","    model_inputs = tokenizer(inputs, max_length=max_input_length, truncation=True)\n","\n","    # Setup the tokenizer for targets\n","    with tokenizer.as_target_tokenizer():\n","        labels = tokenizer(examples[\"Summary\"].to_list(), max_length=max_target_length, truncation=True)\n","\n","    model_inputs[\"labels\"] = labels[\"input_ids\"]\n","    return model_inputs"]},{"cell_type":"markdown","metadata":{"id":"0lm8ozrJIrJR"},"source":["This function works with one or several examples. In the case of several examples, the tokenizer will return a list of lists for each key:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":142,"status":"ok","timestamp":1637478096859,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"-b70jh26IrJS","outputId":"b4339d6f-9f87-468d-b025-225ae43c0263"},"outputs":[{"data":{"text/plain":["{'input_ids': [[16345, 3876, 1096, 25, 288, 83, 257, 8045, 607, 77, 392, 8471, 2406, 1969, 6136, 1966, 649, 1786, 1044, 29408, 3491, 29263, 1339, 285, 3204, 4585, 1115, 4973, 9605, 4578, 7530, 2221, 256, 3322, 3329, 3805, 1790, 3761, 10470, 4473, 22336, 12580, 1444, 4973, 1302, 1201, 4473, 2540, 42897, 5026, 541, 305, 69, 12743, 4346, 2137, 10691, 6621, 607, 77, 392, 8471, 47819, 427, 323, 7697, 474, 268, 5331, 640, 5123, 13683, 607, 77, 392, 8471, 734, 1450, 6497, 32660, 12192, 1363, 1903, 3329, 1711, 474, 1726, 1864, 9709, 10357, 32660, 12192, 384, 10341, 7593, 3952, 5093, 708, 293, 17913, 2347, 9770, 2823, 2237, 640, 13683, 4260, 607, 77, 392, 8471, 37728, 5170, 1339, 607, 77, 392, 8471, 1231, 1917, 13683, 1239, 5545, 1744, 20289, 5170, 4973, 5123, 4282, 1239, 1043, 991, 12580, 1994, 5397, 415, 498, 2370, 1534, 607, 77, 392, 8471, 2923, 32660, 12192, 1871, 2370, 1363, 8452, 2008, 2077, 5664, 4395, 905, 607, 77, 392, 8471, 39931, 2042, 2378, 804, 588, 2485, 880, 6466, 1043, 1474, 32660, 12192, 1767, 288, 2616, 1450, 340, 938, 1285, 12580, 1444, 427, 323, 7697, 474, 268, 5331, 1302, 15463, 607, 77, 392, 8471, 1297, 34291, 3091, 3155, 1363, 2126, 3091, 12580, 33799, 3091, 7763, 2485, 3761, 1624, 3091, 743, 7763, 5727, 1312, 9617, 4738, 10285, 1706, 474, 268, 5331, 15463, 4375, 3505, 3446, 29947, 3091, 3761, 1624, 12580, 4583, 925, 1310, 2565, 14085, 4346, 3491, 1494, 1545, 784, 16866, 11781, 3451, 784, 4156, 1738, 635, 5371, 1644, 14523, 427, 38553, 3645, 607, 77, 392, 8471, 14873, 891, 23048, 220, 1142, 395, 3355, 558, 1097, 33280, 393, 83, 528, 16407, 6717, 3088, 13869, 9002, 2221, 8958, 341, 2739, 256, 3322, 1903, 29445, 3462], [16345, 3876, 1096, 25, 319, 77, 3034, 14237, 3249, 8830, 3554, 7421, 308, 2224, 88, 34700, 306, 26643, 869, 779, 1182, 3034, 13324, 588, 33334, 19138, 27762, 11063, 431, 300, 16406, 3773, 16457, 3056, 4902, 18268, 886, 2158, 308, 2224, 88, 14971, 7593, 396, 6228, 4400, 2687, 1965, 711, 33334, 19138, 1575, 3056, 991, 14281, 11063, 431, 3773, 8970, 1194, 34540, 7421, 308, 2224, 88, 1165, 1057, 13324, 3554, 5033, 6481, 46392, 661, 3520, 9431, 308, 2224, 88, 991, 530, 1627, 20140, 3704, 10708, 4283, 635, 1625, 6537, 10900, 3034, 8722, 23684, 47670, 3277, 1654, 2540, 880, 7421, 308, 2224, 88, 3252, 9158, 4272, 3056, 2756, 2957, 8860, 4870, 45360, 2831, 21765, 4334, 1502, 10474, 1627, 1311, 1150, 3349, 717, 3860, 10909, 1411, 1218, 3860, 2158, 8761, 30740, 2945, 7172, 4581, 44828, 2568, 1575, 8278, 1502, 11292, 16577, 5922, 1499, 3377, 1637, 3056, 2138, 1210, 2539, 4618, 7421, 308, 2224, 88, 3227, 20955, 42462, 16503, 1181, 16457, 9258, 2961, 614, 1393, 2494, 27527, 1683, 2440, 1907, 10610, 4104, 1973, 379, 75, 5109, 2063, 4286, 16083, 308, 2224, 88, 24873, 1754, 1459, 1848, 1262, 1913, 10784, 12042, 11677, 3139, 308, 2224, 1664, 1325, 10522, 1637, 308, 2224, 18473, 4341, 11292, 11091, 2160, 3215, 8383, 3758, 736, 1641, 1295, 588, 26876, 331, 1018, 26388, 544, 6087, 30740, 2945, 10784, 18939, 3220, 6074, 1330, 1871, 1517, 16378, 3056, 9812, 503, 10724, 308, 2224, 18473, 10522, 3236, 11292, 7593, 4896, 1509, 11978, 11807, 2997, 2997, 11807, 5322, 1459, 1848, 23565, 903, 1459, 1848, 3751, 18201, 3016, 2997, 2938, 2997, 11807, 614, 308, 2224, 88, 3034, 11949, 4318, 3331, 12207, 274, 17796, 1266, 4729, 3139, 736, 308, 2224, 88, 8620, 1994, 20983, 2494, 1700, 6001, 938, 6076, 1230, 1816, 23669, 473, 47928, 610, 397, 544, 1969, 7625, 3953, 13027, 1943, 1854, 3181, 19125, 1735, 1245, 1029, 1393, 2494, 2626, 881, 17416, 1625, 640, 16503, 1181, 1907, 15229, 328, 270, 10610, 635, 13663, 1393, 2494, 477, 2435, 1029, 3090, 925, 1637, 5789, 21151, 3101, 3773, 640, 867, 7026, 1637, 2622, 336, 2088, 2046, 517, 1029, 16503, 1181, 1393, 2494, 12725, 15811, 308, 2224, 1317, 8872, 4073, 1317, 4268, 1988, 1411, 3688, 8872, 938, 614, 614, 886, 1317, 5365, 1877, 1988, 1642, 1330, 16378, 16842, 10610, 560, 23642, 308, 2224, 88, 757, 1310, 10717, 7794, 10784, 4073, 8688, 16457, 614, 4444, 19360, 4438, 1310, 45194, 19318, 2023, 5351, 77, 5342, 12446, 267, 33955, 30592, 1443, 40180, 487, 11001, 3034, 3349, 6632, 1411, 8972, 19547, 46400, 6466, 989, 308, 2224, 88, 1936, 2957, 278, 3034, 24224, 2938, 1499, 1103, 10319, 2260, 1720, 1302, 991, 1411, 3349, 3726, 649, 614, 772, 3870, 527, 17724, 3177, 16915, 2209, 3277, 30006, 18030, 315, 5513, 21184, 7728, 1327, 3704, 2975, 9105, 4058, 334, 6919, 1884, 12053, 17724, 17646, 2282, 3034, 3842, 22085, 881, 1411, 614, 5526, 17646, 4412, 14969, 962, 1499, 2368, 28209, 5068, 3331, 7172, 7067, 1884, 23196, 378, 1687, 2005, 8072, 1230, 1903, 614, 11677, 7396, 1919, 2324, 6074, 1230, 279, 388, 381, 3036, 278, 1808, 5526, 531, 10681, 467, 1411, 1593, 1271, 661, 34464, 1711, 4391, 3331, 17646, 531, 4046, 285, 81, 5513, 21184, 8606, 894, 715, 1359, 306, 28569, 13214, 894, 926, 432, 3101, 13430, 5342, 1230, 290, 260, 292, 18042, 4807, 322, 5342, 2267, 1297, 9095, 1568, 1230, 2074, 15637, 3067, 7395, 20705, 10522, 1029, 11807, 1534, 10726, 31907, 434, 3393, 1444, 1502, 4664, 16008, 14324, 6614, 12600, 256, 877, 901, 3520, 21765, 510, 45610, 7621, 4528, 397, 518]], 'attention_mask': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], 'labels': [[16354, 649, 1786, 1044, 29408, 3491, 1986, 5123, 3877, 5170, 16298, 259, 32660, 12192], [4189, 77, 3034, 14237, 3249, 8830, 3554, 7421, 308, 2224, 88, 34700, 306, 26643, 869, 779, 1182, 3034, 13324, 588, 33334, 19138, 27762, 11063, 431, 300, 16406, 3773, 16457, 3056, 4902, 18268, 886, 2158, 308, 2224, 88, 14971, 7593, 396, 6228, 4400, 2687, 1965, 711, 33334, 19138, 1575, 3056, 991, 14281, 11063, 431, 3773, 8970, 1194, 34540, 7421, 308, 2224, 88, 1165, 1057, 13324, 3554, 5033, 6481, 46392, 661, 3520, 9431, 308, 2224, 88, 991, 530, 1627, 20140, 3704, 10708, 4283, 635, 1625, 6537, 10900, 3034, 8722, 23684, 47670, 3277]]}"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["preprocess_function(raw_datasets[:2])\n","# dataset[:2]"]},{"cell_type":"markdown","metadata":{"id":"zS-6iXTkIrJT"},"source":["To apply this function on all the pairs of sentences in our dataset, we just use the `map` method of our `dataset` object we created earlier. This will apply the function on all the elements of all the splits in `dataset`, so our training, validation and testing data will be preprocessed in one single command."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":148,"status":"ok","timestamp":1637476632793,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"sxEzfBzBNCzC","outputId":"beb0f179-e10e-4ea2-bb6d-315a54e2f1a8"},"outputs":[{"data":{"text/plain":["['edt aaron hernandez coming close attorney former new england patriot star rested case monday calling three witness closing argument scheduled begin tuesday morning despite short defense presentation trial marathon prosecution called witness stand since trial began jan semiprofessional football player dating sister hernandez fiance shayanna jenkins time murder prosecutor hernandez two men picked lloyd home early morning hour june according testimony drove lloyd secluded industrial park north attleborough massachusetts shot six time prosecutor alleged hernandez orchestrated killing case hernandez without problem prosecutor never presented possible motive killing witness murder weapon never found still prosecution key circumstantial evidence prof hernandez killed lloyd among evidence home surveillance video taken minute shooting show hernandez gripping black item look like gun well joint found near lloyd body dna men it last week prosecution called shayanna jenkins stand testified hernandez told dispose box couple home idea box prosecution contends box contained gun defense claim box may contained marijuana i threw random dumpster jenkins testified adding remember exactly disposed box defense claim prosecution theory made little sense questioning football star kill friend â€“ ruin promising career â€“ apparent reason also accused police conducting shoddy investigation hernandez codefendant ernest wallace carlos ortiz pleaded guilty tried separately jury begin deliberation late tuesday early wednesday',\n"," 'bonn economic summit meeting western leader west germany staunchly resisted call use head economic steam like locomotive tug europe lagging economy recession oil crisis induced end however germany politician industrialist flattered anyone asked play locomotive cost oil still climbing europe economy locked another downturn west germany too run steam leader becoming increasingly pessimistic people remain convinced germany still one line heavier piece rolling stock also came realize immune economic difficulty plague industrialized nation sure began well west germany fear spiraling oil price led factory owner stockpile industry booked heavy order assembly line hummed growth first quarter acceptable percent second quarter however pace slackened consumer spending eased energy cost rose order overseas dried developing country spent money oil rather turnkey plant west germany production slowed ripple united state recession begun earlier year interest rate screwed ever higher fight inflation spread across atlantic half picture traditionally germany juggler current account using strong export earnings offset capital german company invest abroad money german tourist spend overseas considerable sum foreign worker send back family place like turkey yugoslavia combination slackened export sharply increased payment import among thing costly oil enormous outlay german tourist abroad huge overseas industrial investment swelled deficit billion billion deficit reduced current account shamble current account showed surplus nearly billion expected billion deficit year germany economic engineer central bank bundesbank best attract capital back germany raising key lending rate record height last spring government went borrowing saudi arabia close gap measure partial success others brought unwanted side effect high interest rate lost much attraction came time united state fight doubledigit inflation also lifted interest rate alltime high addition made money expensive dampening economy time many cheap money needed stoke fire more high united state interest rate attracted investor german mark dollar caused mark drop value percent compared dollar last year year end mark relatively low value making import costly lifting inflationary spiral germany again little stem decline export caused worldwide recession year ended outlook offered little consolation october bonn minister economics otto lambsdorff predicted economic growth zero percent shortly thereafter gloomy joint report germany five leding economic institute expected country real gross national product stand still percent growth beginning new year even somber prediction considered optimistic address nation chancellor helmut schmidt warned hard piece road lying ahead u remark likely prompted prediction economist saying economic activity shrink much percent year survey economist commerzbank country thirdlargest commercial bank consumer buying likely stagnate tax cut promised government early year offset rising social security payment government pumppriming question survey said unemployment go percent important number people shortened hour jump bank economist said speech mr schmidt rejected belittlingly termed rhetoric belttightening junior minister government andreas von bulow minister research told reporter later government consider limiting travel currency expenditure abroad high deficit prof chronic ailment immediately called order senior colleague meantime plane resort tenerife remain booked up john tagliabue']"]},"execution_count":55,"metadata":{},"output_type":"execute_result"}],"source":["rdx = dataset.to_dict(orient='list')\n","rdx['text'][:2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DDtsaJeVIrJT"},"outputs":[],"source":["tokenized_datasets = raw_datasets.map(preprocess_function)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CLjfxC-KT6Ji"},"outputs":[],"source":["trainset = int(dataset.shape[0]*0.7)\n","validset = int(dataset.shape[0]*0.3)"]},{"cell_type":"markdown","metadata":{"id":"voWiw8C7IrJV"},"source":["Even better, the results are automatically cached by the ðŸ¤— Datasets library to avoid spending time on this step the next time you run your notebook. The ðŸ¤— Datasets library is normally smart enough to detect when the function you pass to map has changed (and thus requires to not use the cache data). For instance, it will properly detect if you change the task in the first cell and rerun the notebook. ðŸ¤— Datasets warns you when it uses cached files, you can pass `load_from_cache_file=False` in the call to `map` to not use the cached files and force the preprocessing to be applied again.\n","\n","Note that we passed `batched=True` to encode the texts by batches together. This is to leverage the full benefit of the fast tokenizer we loaded earlier, which will use multi-threading to treat the texts in a batch concurrently."]},{"cell_type":"markdown","metadata":{"id":"545PP3o8IrJV"},"source":["## Fine-tuning the model"]},{"cell_type":"markdown","metadata":{"id":"FBiW8UpKIrJW"},"source":["Now that our data is ready, we can download the pretrained model and fine-tune it. Since our task is of the sequence-to-sequence kind, we use the `AutoModelForSeq2SeqLM` class. Like with the tokenizer, the `from_pretrained` method will download and cache the model for us."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":48},"executionInfo":{"elapsed":22492,"status":"ok","timestamp":1637478145320,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"TlqNaB8jIrJW","outputId":"aa551259-528a-44d8-b15c-5038384c3807"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5ebc1edcdfe142f9a5d649814fd63786","version_major":2,"version_minor":0},"text/plain":["Downloading:   0%|          | 0.00/523M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"}],"source":["# from transformers import AutoModelForSeq2SeqLM, DataCollatorForSeq2Seq, Seq2SeqTrainingArguments, Seq2SeqTrainer\n","from transformers import  GPT2LMHeadModel,GPT2DoubleHeadsModel\n","model = GPT2LMHeadModel.from_pretrained(model_checkpoint)\n"]},{"cell_type":"markdown","metadata":{"id":"CczA5lJlIrJX"},"source":["Note that  we don't get a warning like in our classification example. This means we used all the weights of the pretrained model and there is no randomly initialized head in this case."]},{"cell_type":"markdown","metadata":{"id":"_N8urzhyIrJY"},"source":["To instantiate a `Seq2SeqTrainer`, we will need to define three more things. The most important is the [`Seq2SeqTrainingArguments`](https://huggingface.co/transformers/main_classes/trainer.html#transformers.Seq2SeqTrainingArguments), which is a class that contains all the attributes to customize the training. It requires one folder name, which will be used to save the checkpoints of the model, and all other arguments are optional:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XSmAMWfG10aJ"},"outputs":[],"source":["from transformers import AutoModelForSeq2SeqLM, DataCollatorForSeq2Seq, Seq2SeqTrainingArguments, Seq2SeqTrainer\n","\n","batch_size = 16\n","model_name = model_checkpoint.split(\"/\")[-1]\n","model.to('cuda:0')\n","args = Seq2SeqTrainingArguments(\n","    f\"{model_name}-finetuned-xsum\",\n","    evaluation_strategy = \"epoch\",\n","    learning_rate=2e-5,\n","    per_device_train_batch_size=batch_size,\n","    per_device_eval_batch_size=batch_size,\n","    weight_decay=0.01,\n","    save_total_limit=3,\n","    num_train_epochs=1,\n","    predict_with_generate=True,\n","    fp16=True,\n","    push_to_hub=True,\n",")\n"]},{"cell_type":"markdown","metadata":{"id":"km3pGVdTIrJc"},"source":["Here we set the evaluation to be done at the end of each epoch, tweak the learning rate, use the `batch_size` defined at the top of the cell and customize the weight decay. Since the `Seq2SeqTrainer` will save the model regularly and our dataset is quite large, we tell it to make three saves maximum. Lastly, we use the `predict_with_generate` option (to properly generate summaries) and activate mixed precision training (to go a bit faster).\n","\n","The last argument to setup everything so we can push the model to the [Hub](https://huggingface.co/models) regularly during training. Remove it if you didn't follow the installation steps at the top of the notebook. If you want to save your model locally in a name that is different than the name of the repository it will be pushed, or if you want to push your model under an organization and not your name space, use the `hub_model_id` argument to set the repo name (it needs to be the full name, including your namespace: for instance `\"sgugger/t5-finetuned-xsum\"` or `\"huggingface/t5-finetuned-xsum\"`).\n","\n","Then, we need a special kind of data collator, which will not only pad the inputs to the maximum length in the batch, but also the labels:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Yp_Lt-uP10aK"},"outputs":[],"source":["data_collator = DataCollatorForSeq2Seq(tokenizer, model=model)"]},{"cell_type":"markdown","metadata":{"id":"7sZOdRlRIrJd"},"source":["The last thing to define for our `Seq2SeqTrainer` is how to compute the metrics from the predictions. We need to define a function for this, which will just use the `metric` we loaded earlier, and we have to do a bit of pre-processing to decode the predictions into texts:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UmvbnJ9JIrJd"},"outputs":[],"source":["import nltk\n","import numpy as np\n","\n","def compute_metrics(eval_pred):\n","    predictions, labels = eval_pred\n","    decoded_preds = tokenizer.batch_decode(predictions, skip_special_tokens=True)\n","    # Replace -100 in the labels as we can't decode them.\n","    labels = np.where(labels != -100, labels, tokenizer.pad_token_id)\n","    decoded_labels = tokenizer.batch_decode(labels, skip_special_tokens=True)\n","    \n","    # Rouge expects a newline after each sentence\n","    decoded_preds = [\"\\n\".join(nltk.sent_tokenize(pred.strip())) for pred in decoded_preds]\n","    decoded_labels = [\"\\n\".join(nltk.sent_tokenize(label.strip())) for label in decoded_labels]\n","    \n","    result = metric.compute(predictions=decoded_preds, references=decoded_labels, use_stemmer=True)\n","    # Extract a few results\n","    result = {key: value.mid.fmeasure * 100 for key, value in result.items()}\n","    \n","    # Add mean generated length\n","    prediction_lens = [np.count_nonzero(pred != tokenizer.pad_token_id) for pred in predictions]\n","    result[\"gen_len\"] = np.mean(prediction_lens)\n","    \n","    return {k: round(v, 4) for k, v in result.items()}"]},{"cell_type":"markdown","metadata":{"id":"rXuFTAzDIrJe"},"source":["Then we just need to pass all of this along with our datasets to the `Seq2SeqTrainer`:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":59083,"status":"ok","timestamp":1637478690658,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"imY1oC3SIrJf","outputId":"d517e5c2-afce-4b54-a490-4fa81f43e79b"},"outputs":[{"name":"stderr","output_type":"stream","text":["Cloning https://huggingface.co/BhanuSama/gpt2-finetuned-xsum into local empty directory.\n","Using amp fp16 backend\n"]}],"source":["trainer = Seq2SeqTrainer(\n","    model,\n","    args,\n","    train_dataset=tokenized_datasets[:trainset],\n","    eval_dataset=tokenized_datasets[trainset+1:],\n","    data_collator=data_collator,\n","    tokenizer=tokenizer,\n","    compute_metrics=compute_metrics\n",")"]},{"cell_type":"markdown","metadata":{"id":"CdzABDVcIrJg"},"source":["We can now finetune our model by just calling the `train` method:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"executionInfo":{"elapsed":284,"status":"error","timestamp":1637478697762,"user":{"displayName":"Sumedha Sirikonda","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13604935234152853023"},"user_tz":300},"id":"uNx5pyRlIrJh","outputId":"90ade8af-5d37-459c-9e10-8a3f75d842cd","scrolled":false},"outputs":[{"name":"stderr","output_type":"stream","text":["***** Running training *****\n","  Num examples = 3\n","  Num Epochs = 1\n","  Instantaneous batch size per device = 16\n","  Total train batch size (w. parallel, distributed \u0026 accumulation) = 16\n","  Gradient Accumulation steps = 1\n","  Total optimization steps = 1\n"]},{"ename":"AttributeError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-41-3435b262f1ae\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[0;32m----\u003e 1\u001b[0;31m \u001b[0mtrainer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/transformers/trainer.py\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(self, resume_from_checkpoint, trial, ignore_keys_for_eval, **kwargs)\u001b[0m\n\u001b[1;32m   1288\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontrol\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcallback_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_epoch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontrol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1289\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1290\u001b[0;31m             \u001b[0;32mfor\u001b[0m \u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minputs\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mepoch_iterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1291\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1292\u001b[0m                 \u001b[0;31m# Skip past any already trained steps if resuming training\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m__next__\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    519\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sampler_iter\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    520\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 521\u001b[0;31m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_next_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    522\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_yielded\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    523\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dataset_kind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0m_DatasetKind\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mIterable\u001b[0m \u001b[0;32mand\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py\u001b[0m in \u001b[0;36m_next_data\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    559\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_next_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    560\u001b[0m         \u001b[0mindex\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_next_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# may raise StopIteration\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 561\u001b[0;31m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_dataset_fetcher\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfetch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# may raise StopIteration\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    562\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_pin_memory\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    563\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_utils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpin_memory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpin_memory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/utils/data/_utils/fetch.py\u001b[0m in \u001b[0;36mfetch\u001b[0;34m(self, possibly_batched_index)\u001b[0m\n\u001b[1;32m     50\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m             \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpossibly_batched_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 52\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcollate_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/transformers/data/data_collator.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, features, return_tensors)\u001b[0m\n\u001b[1;32m    535\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mreturn_tensors\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    536\u001b[0m             \u001b[0mreturn_tensors\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreturn_tensors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 537\u001b[0;31m         \u001b[0mlabels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfeature\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"labels\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mfeature\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mfeatures\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0;34m\"labels\"\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mfeatures\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeys\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    538\u001b[0m         \u001b[0;31m# We have to pad the labels before calling `tokenizer.pad` as this method won't pad them and needs them of the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    539\u001b[0m         \u001b[0;31m# same length to return tensors.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'tokenizers.Encoding' object has no attribute 'keys'"]}],"source":["trainer.train()"]},{"cell_type":"markdown","metadata":{"id":"W3mmf_VC10aO"},"source":["You can now upload the result of the training to the Hub, just execute this instruction:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e7Ir1iEo10aO"},"outputs":[],"source":["trainer.push_to_hub()"]},{"cell_type":"markdown","metadata":{"id":"UHqUnv6b10aO"},"source":["You can now share this model with all your friends, family, favorite pets: they can all load it with the identifier `\"your-username/the-name-you-picked\"` so for instance:\n","\n","```python\n","from transformers import AutoModelForSeq2SeqLM\n","\n","model = AutoModelForSeq2SeqLM.from_pretrained(\"sgugger/my-awesome-model\")\n","```"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"J0Tp_KCJ10aP"},"outputs":[],"source":[""]}],"metadata":{"colab":{"collapsed_sections":[],"machine_shape":"hm","name":"TextSummarization-GPT2","provenance":[{"file_id":"https://github.com/huggingface/notebooks/blob/master/examples/summarization.ipynb","timestamp":1637470392421}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"031186bbea44460ab4134177225b9212":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_1e093bec436940799e9bce3d350bd950","IPY_MODEL_1ab1f7029876498fa1d16c07cc1b91be","IPY_MODEL_9ef2e580c86244268b2b71d263269743"],"layout":"IPY_MODEL_fae105d067c54309939620f4f9b14300"}},"040f18fbdb8243fea226476230de4979":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"087b96a1bdb94322b0c9b866ed4274a3":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"096ff8e0e7d646569e0b6da4d77e9ae6":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0a34b5483d494978983bf79f8ebfac95":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0bb056590f4844fe809f5299a937fb86":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"10a0575d2df54979b719de41523cd945":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"111dff6c9e6d4780b8287af59cff1a20":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"124669597eb94c77b055a07b4e7b0638":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"13b3a29d813d4169b42131f5ef758587":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"142e581989df4dec8547513386038023":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"15bc0d4cf6404def9008d7c543f44ad9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1ab1f7029876498fa1d16c07cc1b91be":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f03a311caf914472bf105b7fe8892c61","max":1355256,"min":0,"orientation":"horizontal","style":"IPY_MODEL_111dff6c9e6d4780b8287af59cff1a20","value":1355256}},"1e093bec436940799e9bce3d350bd950":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5a267cbe5e8544d4bedd50b04ee9c8ff","placeholder":"â€‹","style":"IPY_MODEL_bdbdc155b69e4dc889579b912ea672f0","value":"Downloading: 100%"}},"1f0a9d25dc144dc0bd0ae68cf29ed0fb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_087b96a1bdb94322b0c9b866ed4274a3","max":1042301,"min":0,"orientation":"horizontal","style":"IPY_MODEL_040f18fbdb8243fea226476230de4979","value":1042301}},"24386b6d703c4f8db04728590db86025":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"26e97595605144619e08ce98384d65c0":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"27b5f0bb3c80481ca56cd0ff4ce7ef89":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3210822988b946f5823cd2b0e3bb41c7","placeholder":"â€‹","style":"IPY_MODEL_e319ea071d2644b09085a5497b5fa808","value":"Downloading: 100%"}},"3210822988b946f5823cd2b0e3bb41c7":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"38f9855f425a4ad4ab7573e65ef24f15":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_735bec7d731c4af49c05f3d31cfffa86","placeholder":"â€‹","style":"IPY_MODEL_24386b6d703c4f8db04728590db86025","value":"\u003ccenter\u003e\n\u003cimg src=https://huggingface.co/front/assets/huggingface_logo-noborder.svg alt='Hugging Face'\u003e\n\u003cbr\u003e\n\u003cb\u003eThe AI community building the future\u003c/b\u003e\n\u003cbr\u003e\nImmediately click login after typing your password or it might be stored in plain text in this notebook file.\n\u003c/center\u003e"}},"3dbef1cc184147d0afb2d7209bd69c1d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"44d1f21e59fa4cc6a9c880f0f675f78a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"53cae34c7f384cb29a287b45514f4cca":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"VBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_38f9855f425a4ad4ab7573e65ef24f15","IPY_MODEL_bca53aa102244d36b3373a578316eb91","IPY_MODEL_c834556114374903bbf855d818b7ef76"],"layout":"IPY_MODEL_92edc2a4d3374d69985605e514202ed8"}},"577a999b6c6b434fa3cd0eac0b13d65a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_65baa905e9464e3c924eb7e4e352fcb1","IPY_MODEL_a2fa2878dad9480e97c0fe9740b0c931","IPY_MODEL_7c5e4b217f604e06b193ff54f933b4d2"],"layout":"IPY_MODEL_0a34b5483d494978983bf79f8ebfac95"}},"5a267cbe5e8544d4bedd50b04ee9c8ff":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5b54cbfafe8c4953a58c39f033533b46":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_27b5f0bb3c80481ca56cd0ff4ce7ef89","IPY_MODEL_1f0a9d25dc144dc0bd0ae68cf29ed0fb","IPY_MODEL_f62c9cad5c8e4c079b0df66eee98f88f"],"layout":"IPY_MODEL_b08b5543ed8b422d89c47220574b7c24"}},"5ebc1edcdfe142f9a5d649814fd63786":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_de8da922e5dc440c8b06bc84962ad589","IPY_MODEL_648ac2c8a69b418c817c2e3a668b92f7","IPY_MODEL_afffd9148ea34cdba037c63492282970"],"layout":"IPY_MODEL_996be7b61e7747a1a59937487af3db73"}},"61ab05bff0c74d26be97424386da21b4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_aaa7421fb13f47d08e4af2e56f5817c6","IPY_MODEL_88f284bc25214767ab638a52281f727f","IPY_MODEL_efdb53d6c4f14671b920aaf9bd0fde0f"],"layout":"IPY_MODEL_8e3e1a1d31be432490908e5619f34301"}},"623a5750498e48fe81349ad7e9c6987f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"627625c6891549b5b32932b134a2cd23":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"648ac2c8a69b418c817c2e3a668b92f7":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_26e97595605144619e08ce98384d65c0","max":548118077,"min":0,"orientation":"horizontal","style":"IPY_MODEL_627625c6891549b5b32932b134a2cd23","value":548118077}},"65baa905e9464e3c924eb7e4e352fcb1":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_13b3a29d813d4169b42131f5ef758587","placeholder":"â€‹","style":"IPY_MODEL_142e581989df4dec8547513386038023","value":"Downloading: 100%"}},"6a07aafd66a44629bf2611158c69bc12":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6c7a5a8a7b8c4f54975696432302cd5f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6dd7844209c34ac49a69457daf8f0d6a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f6bdd9768ebe439baee2f1c22b7b75b2","IPY_MODEL_a9096b4d16854db9b65e060b6b4c81cc","IPY_MODEL_aef6ed768a23480589e0695e3e65bb27"],"layout":"IPY_MODEL_10a0575d2df54979b719de41523cd945"}},"735bec7d731c4af49c05f3d31cfffa86":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"75ac4bdaf5364d898596c4675855d54c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"791c08388f15409a9c23a63a3c5b339e":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"79a4cb57c7db4615a88b744d6f64a888":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7c5e4b217f604e06b193ff54f933b4d2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ba6baea3b08545d29bb5528307d5181f","placeholder":"â€‹","style":"IPY_MODEL_e705c6fe80f44f668d802ea6729a147b","value":" 446k/446k [00:00\u0026lt;00:00, 907kB/s]"}},"8090f13daf4d4e029a9add4e38c61f23":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"82eb4d08353e4c38af824881c432e452":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"87f0ce7f1a5346238850423474b9e350":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"88f284bc25214767ab638a52281f727f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_beed6ba6fd204faaa0cb9ed77a57e727","max":665,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e077932643af4d4588aa459c262f17da","value":665}},"8e3e1a1d31be432490908e5619f34301":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"92edc2a4d3374d69985605e514202ed8":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":"center","align_self":null,"border":null,"bottom":null,"display":"flex","flex":null,"flex_flow":"column","grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"50%"}},"961c335fbb79437cb2bd23af6cf223ab":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"96b46e94a9e3453c9cc02f89a2ea3649":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"996be7b61e7747a1a59937487af3db73":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ef2e580c86244268b2b71d263269743":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6c7a5a8a7b8c4f54975696432302cd5f","placeholder":"â€‹","style":"IPY_MODEL_79a4cb57c7db4615a88b744d6f64a888","value":" 1.29M/1.29M [00:00\u0026lt;00:00, 2.68MB/s]"}},"a2fa2878dad9480e97c0fe9740b0c931":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ad44f69e6531435797488bdecd198b0f","max":456318,"min":0,"orientation":"horizontal","style":"IPY_MODEL_44d1f21e59fa4cc6a9c880f0f675f78a","value":456318}},"a9096b4d16854db9b65e060b6b4c81cc":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"danger","description":"","description_tooltip":null,"layout":"IPY_MODEL_c7d318227f6b4dc2ab89cb7d550078f7","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f175cc8ca27c44b383f9c9096fd284b9","value":0}},"aaa7421fb13f47d08e4af2e56f5817c6":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_791c08388f15409a9c23a63a3c5b339e","placeholder":"â€‹","style":"IPY_MODEL_75ac4bdaf5364d898596c4675855d54c","value":"Downloading: 100%"}},"ad44f69e6531435797488bdecd198b0f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ada5409b6c2a4787ba510a7193467ffb":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aef6ed768a23480589e0695e3e65bb27":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ada5409b6c2a4787ba510a7193467ffb","placeholder":"â€‹","style":"IPY_MODEL_87f0ce7f1a5346238850423474b9e350","value":" 0/0 [00:00\u0026lt;?, ? examples/s]"}},"afffd9148ea34cdba037c63492282970":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_961c335fbb79437cb2bd23af6cf223ab","placeholder":"â€‹","style":"IPY_MODEL_124669597eb94c77b055a07b4e7b0638","value":" 523M/523M [00:19\u0026lt;00:00, 28.7MB/s]"}},"b08b5543ed8b422d89c47220574b7c24":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b53255ee35ab48438a40f36874b8abf2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"TextModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"TextModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"TextView","continuous_update":true,"description":"Username:","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_bdd85083f0a145bb85657b73959b758c","placeholder":"â€‹","style":"IPY_MODEL_8090f13daf4d4e029a9add4e38c61f23","value":"BhanuSama"}},"b9601c1d294149d39758a9e22567da6b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"PasswordModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"PasswordModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"PasswordView","continuous_update":true,"description":"Password:","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_dbf3177d34ab4e1587776051d1b4940d","placeholder":"â€‹","style":"IPY_MODEL_6a07aafd66a44629bf2611158c69bc12","value":""}},"ba6baea3b08545d29bb5528307d5181f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bca53aa102244d36b3373a578316eb91":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b53255ee35ab48438a40f36874b8abf2","IPY_MODEL_b9601c1d294149d39758a9e22567da6b"],"layout":"IPY_MODEL_f269e41341ed4222b70d4c3d3364ecef"}},"bdbdc155b69e4dc889579b912ea672f0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bdd85083f0a145bb85657b73959b758c":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"beed6ba6fd204faaa0cb9ed77a57e727":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c7d318227f6b4dc2ab89cb7d550078f7":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"c834556114374903bbf855d818b7ef76":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ButtonModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"","description":"Login","disabled":false,"icon":"","layout":"IPY_MODEL_096ff8e0e7d646569e0b6da4d77e9ae6","style":"IPY_MODEL_d9accf166d4041febb613f2b6ff2cda2","tooltip":""}},"d9accf166d4041febb613f2b6ff2cda2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ButtonStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"daaf07e5d6d94eefb6c0781f029f08d0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dbf3177d34ab4e1587776051d1b4940d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"de8da922e5dc440c8b06bc84962ad589":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_623a5750498e48fe81349ad7e9c6987f","placeholder":"â€‹","style":"IPY_MODEL_82eb4d08353e4c38af824881c432e452","value":"Downloading: 100%"}},"e077932643af4d4588aa459c262f17da":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e319ea071d2644b09085a5497b5fa808":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e705c6fe80f44f668d802ea6729a147b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ef8015a377c44598b94cb1ac6e7144fa":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"efdb53d6c4f14671b920aaf9bd0fde0f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ef8015a377c44598b94cb1ac6e7144fa","placeholder":"â€‹","style":"IPY_MODEL_96b46e94a9e3453c9cc02f89a2ea3649","value":" 665/665 [00:00\u0026lt;00:00, 27.6kB/s]"}},"f03a311caf914472bf105b7fe8892c61":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f175cc8ca27c44b383f9c9096fd284b9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f269e41341ed4222b70d4c3d3364ecef":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f62c9cad5c8e4c079b0df66eee98f88f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3dbef1cc184147d0afb2d7209bd69c1d","placeholder":"â€‹","style":"IPY_MODEL_daaf07e5d6d94eefb6c0781f029f08d0","value":" 0.99M/0.99M [00:00\u0026lt;00:00, 3.01MB/s]"}},"f6bdd9768ebe439baee2f1c22b7b75b2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0bb056590f4844fe809f5299a937fb86","placeholder":"â€‹","style":"IPY_MODEL_15bc0d4cf6404def9008d7c543f44ad9","value":""}},"fae105d067c54309939620f4f9b14300":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}}}}},"nbformat":4,"nbformat_minor":0}